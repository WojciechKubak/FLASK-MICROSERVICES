version: '3.8'

services:
  mysql:
    image: mysql:latest
    volumes:
      - mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_1
      MYSQL_USER: user
      MYSQL_PASSWORD: user1234
      MYSQL_TCP_PORT: 3307
    ports:
      - '3307:3307'
    expose:
      - 3307
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    networks:
      - server

  mysql-test:
    image: mysql:latest
    volumes:
      - mysql-test:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_test
      MYSQL_USER: user
      MYSQL_PASSWORD: user1234
      MYSQL_TCP_PORT: 3308
    ports:
      - '3308:3308'
    expose:
      - 3308
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    networks:
      - server

  nginx:
    image: nginx:latest
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - server
    depends_on:
      - articles-service
      - translations-service
      - users-service

  articles-service:
    build:
      context: .
      dockerfile: /server/articles/Dockerfile
    command: gunicorn --bind 0.0.0.0:8001 --workers 4 'app:create_app()' --reload
    volumes:
      - ./:/webapp
    depends_on:
      mysql:
        condition: service_healthy
      mysql-test:
        condition: service_healthy
    ports:
      - "8001:8001"
    networks:
      server:
        aliases:
          - articles

  translations-service:
    build:
      context: .
      dockerfile: /server/translations/Dockerfile
    command: gunicorn --bind 0.0.0.0:8002 --workers 4 'app:create_app()' --reload
    volumes:
      - ./:/webapp
    depends_on:
      mysql:
        condition: service_healthy
      mysql-test:
        condition: service_healthy
    ports:
      - "8002:8002"
    networks:
      server:
        aliases:
          - translations

  users-service:
    build:
      context: .
      dockerfile: /server/users/Dockerfile
    command: gunicorn --bind 0.0.0.0:8003 --workers 4 'app:create_app()' --reload
    volumes:
      - ./:/webapp
    depends_on:
      mysql:
        condition: service_healthy
      mysql-test:
        condition: service_healthy
    ports:
      - "8003:8003"
    networks:
      server:
        aliases:
          - users

volumes:
  mysql:
  mysql-test:
  nginx:

networks:
  server:
